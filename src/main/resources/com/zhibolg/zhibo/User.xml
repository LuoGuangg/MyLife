<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zhibolg.zhibo.dao.UserDao">
	
	<sql id="userColumns">
		a.id AS "id",
		a.userName AS "userName",
		a.userPwd AS "userPwd",
		a.email AS "email",
		a.power AS "power",
		a.black AS "black",
		a.create_by AS "create_by.id",
		a.create_date AS "createDate",
		a.update_by AS "update_by.id",
		a.update_date AS "update_date",
		a.del_flag AS "delFlag"	
	</sql>
	
	<select id="findList" resultType="com.zhibolg.zhibo.entity.User">
		SELECT 
			<include refid="userColumns"/>
		FROM user a
		<where>
			<if test="pageMap.userName != null and pageMap.userName != ''">
				a.userName like '%${pageMap.userName}%'
			</if>
		</where>
	</select>
	
	<select id="get" resultType="com.zhibolg.zhibo.entity.User">
		SELECT 
			<include refid="userColumns"/> 
		FROM user a
		<where>
			<if test="id != '' and id != null">
				a.id = #{id}
			</if>
			<if test="userName != '' and userName != null">
				a.userName = #{userName}
			</if>
		</where>
	</select>
	
	
	<select id="loginYZ" resultType="com.zhibolg.zhibo.entity.User">
		SELECT 
			<include refid="userColumns"/> 
		FROM user a
		<where>
			a.userName = #{userName}
			AND a.userPwd = #{userPwd}
		</where>
	</select>
	
	<update id="update">
		UPDATE user SET
			userName = #{userName},
			userPwd = #{userPwd},
			email = #{email},
			black = #{black},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE user SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<insert id="insert">
		INSERT INTO user(
			id,
			userName,
			userPwd,
			email,
			power,
			black,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUE (
			#{id},
			#{userName},
			#{userPwd},
			#{email},
			#{power},
			#{black},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>

</mapper>
